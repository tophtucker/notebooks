import { Mutable } from "./mutable.js";
import * as Generators from "./generators/index.js";
import { FileAttachment } from "./fileAttachment.js";
import * as DOM from "./dom/index.js";
import { Observer } from "./observer.js";
import { require } from "./require.js";
import { __sql } from "./sql.js";
export declare const root: HTMLElement;
export declare const library: {
    aapl: () => Promise<any>;
    alphabet: () => Promise<any>;
    cars: () => Promise<any>;
    citywages: () => Promise<any>;
    diamonds: () => Promise<any>;
    flare: () => Promise<any>;
    industries: () => Promise<any>;
    miserables: () => Promise<any>;
    olympians: () => Promise<any>;
    penguins: () => Promise<any>;
    pizza: () => Promise<any>;
    weather: () => Promise<any>;
    _: () => Promise<any>;
    aq: () => Promise<any>;
    Arrow: () => Promise<any>;
    d3: () => Promise<any>;
    dot: () => Promise<import("./template.js").RawTemplateRenderer>;
    duckdb: () => Promise<any>;
    DuckDBClient: () => Promise<typeof import("./duckdb.js").DuckDBClient>;
    echarts: () => Promise<any>;
    htl: () => Promise<any>;
    html: () => Promise<any>;
    svg: () => Promise<any>;
    Inputs: () => Promise<typeof import("./inputs.js")>;
    L: () => Promise<typeof import("./leaflet.js")>;
    mapboxgl: () => Promise<any>;
    md: () => Promise<import("./template.js").TemplateRenderer>;
    mermaid: () => Promise<import("./template.js").AsyncRawTemplateRenderer>;
    Plot: () => Promise<any>;
    React: () => Promise<any>;
    ReactDOM: () => Promise<any>;
    tex: () => Promise<import("./template.js").RawTemplateRenderer & {
        options: (options?: any) => import("./template.js").RawTemplateRenderer;
        block: import("./template.js").RawTemplateRenderer;
    }>;
    topojson: () => Promise<any>;
    vl: () => Promise<any>;
    now: () => AsyncGenerator<number, void, unknown>;
    width: () => AsyncGenerator<number, void, unknown>;
    FileAttachment: () => typeof FileAttachment;
    Generators: () => typeof Generators;
    Mutable: () => typeof Mutable;
    DOM: () => typeof DOM;
    require: () => typeof require;
    __sql: () => typeof __sql;
    __ojs_observer: () => () => Observer;
};
