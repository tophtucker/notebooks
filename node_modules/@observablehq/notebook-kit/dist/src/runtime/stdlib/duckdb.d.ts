export class DuckDBClient {
    static of(sources?: {}, config?: {}): Promise<DuckDBClient>;
    static sql(...args: any[]): Promise<(strings: any, ...args: any[]) => Promise<any>>;
    constructor(db: any);
    queryStream(query: any, params: any): Promise<{
        schema: any;
        readRows(): AsyncGenerator<any, void, unknown>;
    }>;
    query(query: any, params: any): Promise<any>;
    queryRow(query: any, params: any): Promise<any>;
    sql(strings: any, ...args: any[]): Promise<any>;
    queryTag(strings: any, ...params: any[]): any[];
    escape(name: any): string;
    describeTables(): Promise<{
        name: any;
    }[]>;
    describeColumns(options?: {}): Promise<{
        name: any;
        type: string;
        nullable: boolean;
        databaseType: any;
    }[]>;
    readonly dialect: string;
}
